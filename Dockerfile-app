FROM golang:alpine AS builder
RUN apk add --no-cache ca-certificates

# Set the current working directory inside the container
WORKDIR /build

# Copy go.mod, go.sum files and download deps
COPY go.mod go.sum ./

RUN go mod download

# Copy sources to the working directory
COPY . .

# Build the binary
RUN CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -a -v -o main ./cmd/app/main.go

FROM alpine:latest

# Set the current working directory inside the container
WORKDIR /app

RUN apk --no-cache add ca-certificates

# Copy our static executable
COPY --from=builder /build/main .
#ADD configs ./configs
#ADD countryCodes ./countryCodes
#ADD receipt ./receipt
# temporary till we migrate all picture related staff into profile service
#RUN mkdir pictures

EXPOSE 80

# Run the api binary.
CMD ["./main"]