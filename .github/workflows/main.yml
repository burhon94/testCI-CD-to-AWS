name: deploy-to-staging

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    name: build and deploy
    runs-on: ubuntu-latest
    steps:
      - shell: bash
        env:
          SUPER_SECRET: ${{ secrets.SuperSecret }}
        run: |
          example-command "$SUPER_SECRET"


#      - name: Checkout
#        uses: actions/checkout@v2
#
#      - name: Configure AWS credentials
#        uses: aws-actions/configure-aws-credentials@v1
#        with:
#          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#          aws-region: eu-west-2
#          #role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
#
#      - name: Login to Amazon ECR
#        id: login-ecr
#        uses: aws-actions/amazon-ecr-login@v1
#        with:
#          registries: 341253789890
#
#      - name: Build, tag, and push image to Amazon ECR
#        env:
#          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
#          ECR_REPOSITORY: alifpay/mobi
#          IMAGE_TAG_APP: cmd_${{ github.sha }}
#        run: |
#          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG_APP -f Dockerfile.APP .
#          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG_APP
#          export FULL_IMAGE_PATH_APP=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG_APP
#          sed -i "s|{{IMAGE}}|$FULL_IMAGE_PATH_MOBI|1" k8s/deployment_app.yaml

#      - name: deploy mobi-api to kubernetes cluster
#        uses: kodermax/kubectl-aws-eks@master
#        env:
#          KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA_STAGING }}
#        with:
#          args: apply -f k8s/deployment_app.yaml